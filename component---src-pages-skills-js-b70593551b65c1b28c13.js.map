{"version":3,"sources":["webpack:///./src/components/layout/layout.css.js","webpack:///./src/components/layout/index.js","webpack:///./src/pages/skills.js"],"names":["styles","layout","pageContainer","Layout","title","children","bgClassName","fixedMenuPosition","className","query","render","site","siteMetadata","siteTitle","siteKeywords","siteDescription","meta","name","content","charSet","lang","css","numPoints","duration","delayPointsMax","delayPerPath","data","transitionStatus","allSkills","allMarkdownRemark","edges","reduce","mySkills","skills","node","frontmatter","currentSkils","acumSkills","currentSkill","find","push","Helmet","type","description"],"mappings":"qLAEA,IAYeA,EAZA,CACbC,OAAO,6EAKPC,cAAc,qD,YCqEDC,EAtEA,SAAC,GAKT,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YAEI,IADJC,yBACI,SACJ,OACE,mBAAKC,UAAS,mBAAoBF,GAAe,UAC/C,YAAC,cAAD,CACEG,MAAK,aAYLC,OAAQ,oBACNC,KACEC,aAAuBC,EAFnB,EAEYT,MAAkBU,EAF9B,EAE8BA,aAAcC,EAF5C,EAE4CA,gBAF5C,OAKN,8BACE,YAAC,IAAD,CACEX,MAAOA,GAASS,EAChBG,KAAM,CACJ,CACEC,KAAM,cACNC,QAASH,GAEX,CACEE,KAAM,WACNC,QAASJ,GAEX,CAAEK,QAAS,WAGb,oBAAMC,KAAK,QAEb,mBAAKZ,UAAU,gBACb,mBAAKa,IAAKrB,EAAOC,QACf,YAAC,IAAD,CACEK,YAAaA,EACbgB,UAAW,GACXC,SAAU,IACVC,eAAgB,IAChBC,aAAc,IACdlB,kBAAmBA,KAGvB,mBAAKc,IAAKrB,EAAOE,eAAgBG,U,YCvDhC,sBAAiC,IAA9BqB,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAClBC,EAAY,GA4BhB,QA3BMF,GAAQ,IAAIG,mBAAqB,IAAIC,QAEzCF,EAAYF,EAAKG,kBAAkBC,MAAMC,QACvC,SACEC,EADF,GAOM,IAHeC,EAGhB,EAJDC,KACEC,YAAeF,OAInB,GAAIA,EAAQ,CACV,IAAMG,EAAeH,EAAOF,QAAO,SAACM,EAAYC,GAK9C,OAHKN,EAASO,MAAK,qBAAGnC,QAAsBkC,EAAalC,UACvDiC,EAAWG,KAAKF,GAEXD,IACN,IACH,MAAM,GAAN,mBAAWL,GAAX,YAAwBI,IAE1B,OAAOJ,IAET,KAKF,YAAC,EAAD,CAAQ5B,MAAK,SAAYE,YAAW,QAAWC,mBAAmB,GAChE,YAACkC,EAAA,OAAD,KACE,oCAEF,YAAC,IAAD,CACER,OAAQL,EACRc,KAAK,aACLtC,MAAM,SACNuC,YAAY,2KAGZhB,iBAAkBA","file":"component---src-pages-skills-js-b70593551b65c1b28c13.js","sourcesContent":["import { css } from \"@emotion/core\"\n\nconst styles = {\n  layout: css`\n    margin-bottom: 1.45rem;\n    position: relative;\n    z-index: 4;\n  `,\n  pageContainer: css`\n    margin: 0px auto;\n    flex: auto;\n  `,\n}\n\nexport default styles\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styles from \"./layout.css\"\nimport Menu from \"../menu\"\n\nconst Layout = ({\n  title,\n  children,\n  bgClassName,\n  fixedMenuPosition = false,\n}) => {\n  return (\n    <div className={`layout-wrapper ${bgClassName || \"white\"}`}>\n      <StaticQuery\n        query={graphql`\n          {\n            site {\n              siteMetadata {\n                title\n                email\n                siteKeywords\n                siteDescription\n              }\n            }\n          }\n        `}\n        render={({\n          site: {\n            siteMetadata: { title: siteTitle, siteKeywords, siteDescription },\n          },\n        }) => (\n          <>\n            <Helmet\n              title={title || siteTitle}\n              meta={[\n                {\n                  name: \"description\",\n                  content: siteDescription,\n                },\n                {\n                  name: \"keywords\",\n                  content: siteKeywords,\n                },\n                { charSet: \"utf-8\" },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <div className=\"layout-inner\">\n              <div css={styles.layout}>\n                <Menu\n                  bgClassName={bgClassName}\n                  numPoints={18}\n                  duration={600}\n                  delayPointsMax={300}\n                  delayPerPath={100}\n                  fixedMenuPosition={fixedMenuPosition}\n                />\n              </div>\n              <div css={styles.pageContainer}>{children}</div>\n            </div>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  bgClassName: PropTypes.string,\n  fixedMenuPosition: PropTypes.bool,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport Layout from \"../components/layout\"\nimport Skill from \"../components/skill\"\n\nexport default ({ data, transitionStatus }) => {\n  let allSkills = []\n  if (((data || {}).allMarkdownRemark || {}).edges) {\n    // Select non duplicated skills from all jobs\n    allSkills = data.allMarkdownRemark.edges.reduce(\n      (\n        mySkills,\n        {\n          node: {\n            frontmatter: { skills },\n          },\n        }\n      ) => {\n        if (skills) {\n          const currentSkils = skills.reduce((acumSkills, currentSkill) => {\n            // If the skill don't exists in array add it\n            if (!mySkills.find(({ title }) => title === currentSkill.title)) {\n              acumSkills.push(currentSkill)\n            }\n            return acumSkills\n          }, [])\n          return [...mySkills, ...currentSkils]\n        }\n        return mySkills\n      },\n      []\n    )\n  }\n\n  return (\n    <Layout title={`Skills`} bgClassName={`skill`} fixedMenuPosition={true}>\n      <Helmet>\n        <title>Skills</title>\n      </Helmet>\n      <Skill\n        skills={allSkills}\n        type=\"scrollable\"\n        title=\"Skills\"\n        description=\"These are the skills that I have acquired through my years of\n            experience working as a software developer, the order is based on\n            the ones I like most and or I have used.\"\n        transitionStatus={transitionStatus}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"/experience/\" } } }\n      sort: { fields: [frontmatter___dateFrom], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            skills {\n              title\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}